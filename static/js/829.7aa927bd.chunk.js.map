{"version":3,"file":"static/js/829.7aa927bd.chunk.js","mappings":"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","sources":["assets/images/arrrow.svg","components/Body/Messages/Message/Message.jsx","components/Body/Messages/MessagesForm.jsx","components/Body/Messages/Dialog/Dialog.jsx","components/Body/Messages/Messages.tsx","hoc/withAuthRedirect.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.36841 7C0.816123 7 0.368408 7.44772 0.368408 8C0.368408 8.55228 0.816123 9 1.36841 9V7ZM15.3591 8.70711C15.7496 8.31658 15.7496 7.68342 15.3591 7.29289L8.99516 0.928932C8.60464 0.538408 7.97147 0.538408 7.58095 0.928932C7.19042 1.31946 7.19042 1.95262 7.58095 2.34315L13.2378 8L7.58095 13.6569C7.19042 14.0474 7.19042 14.6805 7.58095 15.0711C7.97147 15.4616 8.60464 15.4616 8.99516 15.0711L15.3591 8.70711ZM1.36841 9H14.652V7H1.36841V9Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrrow);\nexport default __webpack_public_path__ + \"static/media/arrrow.ceb7a8aba934b6b115350c17c345ff36.svg\";\nexport { ForwardRef as ReactComponent };","const Message = (props) => {\n    return (\n        <div className=\"messages-body__messagefield\">\n            <div className=\"messages-body__block\">\n                <div className=\"messages-body__userphoto\">\n                    <img src={props.image} alt=\"person avatar\" />\n                </div>\n                <div className=\"messages-body__username\">\n                    {props.userName}\n                </div>\n            </div>\n            <div className=\"messages-body__message\">\n                {props.textMessage}\n            </div>\n        </div>\n    );\n}\n\n//========================================================================================================================================================\n\nexport default Message;\n","import { Form, Formik } from 'formik';\nimport * as yup from 'yup';\n\nimport ui from '../../../scss/ui.module.scss';\nimport arrow from '../../../assets/images/arrrow.svg'\n\n//========================================================================================================================================================\n\nexport const MessagesForm = (props) => {\n    const validationMessages = yup.object().shape({\n        newMessageText: yup.string().typeError('string expected!').required('Obligatory field!'),\n    })\n    return (\n        <Formik\n            initialValues={{\n                newMessageText: '',\n            }}\n            validateOnBlur\n            onSubmit={(values, {resetForm}) => {\n                props.addNewMessage(values)\n                resetForm({ newMessageText: '' })\n            }}\n            validationSchema={validationMessages}\n        >\n            {({ values, errors, touched, handleBlur, handleSubmit, handleChange }) => (\n                <div className=\"messages-body__form\">\n                    <div className=\"profile-body__form\">\n                        <Form>\n                            <div>\n                                <textarea placeholder='Write smth here and tap to btn'\n                                    className={ui._area}\n                                    type=\"text\"\n                                    name='newMessageText'\n                                    onChange={handleChange}\n                                    onBlur={handleBlur}\n                                    value={values.newMessageText}\n                                />\n                            </div>\n                        </Form>\n                        <div className=\"profile-body__addpost\">\n                            <button\n                                disabled={props.webSocket.readyState !== WebSocket.OPEN}\n                                onClick={handleSubmit}\n                                type='submit'\n                                className={ui.search}\n                            >\n                                <img src={arrow} alt=\"\" />\n                            </button>\n                        </div>\n                    </div>\n                    {touched.newMessageText && errors.newMessageText && <p className='error'>{errors.newMessageText}</p>}\n                </div>\n            )}\n        </Formik>\n    )\n}\n","import { NavLink } from 'react-router-dom';\nimport hedgehog from '../../../../assets/images/hedgehog.png';\n\n//========================================================================================================================================================\n\nconst Dialog = (props) => {\n    let path = '/messages/' + props.id;\n\n    return (\n        <div className='messages-body__user'>\n            <NavLink to={path} className=\"messages-body__dialog\">\n                <div className=\"messages-body__image\">\n                    <img src={hedgehog} alt='hedgehog'/>\n                </div>\n                {props.name}\n            </NavLink>\n        </div>\n    );\n}\n\n//========================================================================================================================================================\n\nexport default Dialog;\n","// import Dialog from './Dialog/Dialog'\nimport Message from './Message/Message'\nimport './Messages.scss'\nimport '../Profile/Profile.scss'\nimport React, { useState, useEffect } from 'react';\n\nimport { MessagesForm } from './MessagesForm';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\nimport { useRef } from 'react';\n// @ts-ignore\nimport { dialogType } from './../types/Types.ts';\nimport Dialog from './Dialog/Dialog';\n\n//========================================================================================================================================================\n\nexport type MessagesType = {\n    message: string,\n    photo: string,\n    userId: number,\n    userName: string\n}\n\nconst initialState = {\n    dialogData: [\n        { id: 1, name: 'Darya' },\n        { id: 2, name: 'Maksim' },\n        { id: 3, name: 'Fuad' },\n        { id: 4, name: 'Faig' },\n        { id: 5, name: 'Anatolich' },\n        { id: 6, name: 'Denis' },\n    ] as Array<dialogType>,\n}\n\nconst Messages = () => {\n\n    const webSocket: WebSocket = new WebSocket('wss://social-network.samuraijs.com/handlers/ChatHandler.ashx');\n\n    const messagesAnchorRef = useRef<HTMLDivElement>(null)\n    const [isAutoScroll, setIsAutoScroll] = useState(true)\n    const scrollHandler = (e: React.UIEvent<HTMLDivElement, UIEvent>) => {\n        const element = e.currentTarget;\n        if (Math.abs((element.scrollHeight - element.scrollTop) - element.clientHeight) < 300) {\n            !isAutoScroll && setIsAutoScroll(true)\n        } else {\n            isAutoScroll && setIsAutoScroll(false)\n        }\n    }\n\n    useEffect(() => {\n        webSocket.addEventListener('message', (e) => {\n            let newMessages = JSON.parse(e.data)\n            setMessages((prevMessages) => [...prevMessages, ...newMessages])\n        })\n    }, [])\n    const [messages, setMessages] = useState<MessagesType[]>([])\n\n    useEffect(() => {\n        if (isAutoScroll) {\n            messagesAnchorRef.current?.scrollIntoView({ behavior: 'smooth' })\n        }\n    }, [messages])\n\n    const addNewMessage = (values) => {\n        if (!values.newMessageText) {\n            return\n        }\n        webSocket.send(values.newMessageText)\n    }\n\n    const dialogsElements = initialState.dialogData.map((dialog, index: number) =>\n        <Dialog name={dialog.name} id={dialog.name} key={index} />\n    )\n\n    const messagesElements = messages.map((message, index) =>\n        <Message textMessage={message.message} key={index} image={message.photo} userName={message.userName} />\n    )\n\n    return (\n        <div className=\"body__messages messages-body\">\n            <div className='messages-body__row'>\n                <div className=\"messages-body__dialogs\">\n                    {dialogsElements}\n                </div>\n                <div className='messages-body__right'>\n                    <div className=\"messages-body__messages\" style={{ overflowY: 'auto' }}\n                    onScroll={scrollHandler}\n                    >\n                        {messagesElements}\n                        <div ref={messagesAnchorRef}></div>\n                    </div>\n                    <MessagesForm addNewMessage={addNewMessage} webSocket={webSocket} />\n                </div>\n            </div>\n        </div>\n    );\n}\n\n//========================================================================================================================================================\n\nexport default withAuthRedirect(Messages);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n//========================================================================================================================================================\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.authReducer.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to='/login' />;\n            return <Component {...this.props}/>\n        }\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}\n"],"names":["props","className","src","image","alt","userName","textMessage","MessagesForm","validationMessages","yup","shape","newMessageText","typeError","required","initialValues","validateOnBlur","onSubmit","values","resetForm","addNewMessage","validationSchema","errors","touched","handleBlur","handleSubmit","handleChange","placeholder","ui","type","name","onChange","onBlur","value","disabled","webSocket","readyState","WebSocket","OPEN","onClick","arrow","path","id","to","hedgehog","initialState","dialogData","withAuthRedirect","messagesAnchorRef","useRef","useState","isAutoScroll","setIsAutoScroll","useEffect","addEventListener","e","newMessages","JSON","parse","data","setMessages","prevMessages","messages","current","scrollIntoView","behavior","dialogsElements","map","dialog","index","messagesElements","message","photo","style","overflowY","onScroll","element","currentTarget","Math","abs","scrollHeight","scrollTop","clientHeight","ref","send","mapStateToPropsForRedirect","state","isAuth","authReducer","Component","RedirectComponent","this","React","connect"],"sourceRoot":""}