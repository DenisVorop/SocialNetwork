{"version":3,"file":"static/js/161.b29df1e7.chunk.js","mappings":"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","sources":["assets/images/arrrow.svg","components/Body/Profile/MyPosts/Post/Post.jsx","components/Body/Profile/MyPosts/MyPosts.jsx","components/Body/Profile/MyPosts/MyPostsContainer.jsx","components/Body/Profile/UserInfo/UserStatus.jsx","components/Body/Profile/UserInfo/ProfileData/ProfileDataForm.jsx","components/Body/Profile/UserInfo/ProfileData/ProfileData.jsx","assets/images/settings.svg","components/Body/Profile/UserInfo/UserInfo.jsx","components/Body/Profile/Profile.jsx","components/Body/Profile/ProfileContainer.jsx","hoc/withAuthRedirect.js"],"sourcesContent":["var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgArrrow(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 16,\n    height: 16,\n    viewBox: \"0 0 16 16\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M1.36841 7C0.816123 7 0.368408 7.44772 0.368408 8C0.368408 8.55228 0.816123 9 1.36841 9V7ZM15.3591 8.70711C15.7496 8.31658 15.7496 7.68342 15.3591 7.29289L8.99516 0.928932C8.60464 0.538408 7.97147 0.538408 7.58095 0.928932C7.19042 1.31946 7.19042 1.95262 7.58095 2.34315L13.2378 8L7.58095 13.6569C7.19042 14.0474 7.19042 14.6805 7.58095 15.0711C7.97147 15.4616 8.60464 15.4616 8.99516 15.0711L15.3591 8.70711ZM1.36841 9H14.652V7H1.36841V9Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgArrrow);\nexport default __webpack_public_path__ + \"static/media/arrrow.ceb7a8aba934b6b115350c17c345ff36.svg\";\nexport { ForwardRef as ReactComponent };","const Post = (props) => {\n    return (\n        <div className=\"profile-body__post\">\n            {props.message}\n        </div>\n    );\n}\n\n//========================================================================================================================================================\n\nexport default Post;\n","import Post from \"./Post/Post\";\nimport ui from '../../../../scss/ui.module.scss';\nimport arrow from '../../../../assets/images/arrrow.svg'\nimport React from 'react';\n\nimport { Formik } from 'formik';\nimport * as yup from 'yup';\n\n//========================================================================================================================================================\n\nlet MyPosts = React.memo((props) => {\n    let postElements = props.posts\n        .map(post =>\n            <div className=\"profile-body__wrapper-post\">\n                <Post message={post.message} key={post.id} />\n            </div>)\n\n    let addNewPost = (values) => {\n        props.addPost(values.newPostText)\n    }\n\n    const validationPosts = yup.object().shape({\n        newPostText: yup.string().max(30, 'Error! Exceeded allowed number of characters!').typeError('string expected!').required('Obligatory field!'),\n    })\n\n    return (\n        <div className=\"profile-body__posts\">\n            <div className=\"profile-body__input\">\n                <div className=\"profile-body__my\">My posts</div>\n                <div className=\"profile-body__myPosts\">\n                    <div className=\"profile-body__form\">\n                        <form>\n                            <Formik\n                                initialValues={{\n                                    newPostText: '',\n                                }}\n                                validateOnBlur\n                                onSubmit={(values) => { addNewPost(values) }}\n                                validationSchema={validationPosts}\n                            >\n                                {({ values, errors, touched, handleBlur, isValid, handleSubmit, handleChange, dirty, setFieldValue }) => (\n                                    <div>\n                                        <div className=\"profile-body__form\">\n                                            <div>\n                                                <textarea\n                                                    placeholder='Write smth here and tap to btn'\n                                                    className={ui._area}\n                                                    type=\"text\"\n                                                    name='newPostText'\n                                                    onChange={handleChange}\n                                                    onBlur={handleBlur}\n                                                    value={values.newPostText}\n                                                />\n                                            </div>\n                                            <div className=\"profile-body__addpost\">\n                                                <button\n                                                    disabled={!isValid && !dirty}\n                                                    onClick={handleSubmit}\n                                                    type='submit'\n                                                >\n                                                    <img src={arrow} alt=\"\" />\n                                                </button>\n                                            </div>\n                                        </div>\n                                        {touched.newPostText && errors.newPostText && <p className='error'>{errors.newPostText}</p>}\n                                    </div>\n                                )}\n                            </Formik>\n                        </form>\n                    </div>\n                    {postElements}\n                </div>\n            </div>\n        </div>\n    );\n})\n\n//========================================================================================================================================================\n\nexport default MyPosts;\n","import { addPostActionCreator } from \"../../../../Redux/profileReducer\";\nimport MyPosts from \"./MyPosts\";\nimport { connect } from \"react-redux\";\n\n//========================================================================================================================================================\n\nlet mapStateToProps = (state) => {\n    return {\n        posts: state.stateProfilePage.postData,\n        newPostText: state.stateProfilePage.newPostText,\n    }\n}\nlet mapDispatchToProps = (dispatch) => {\n    return {\n        addPost: (newPostText) => {\n            dispatch(addPostActionCreator(newPostText));\n        },\n    }\n}\n\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\n\n//========================================================================================================================================================\n\nexport default MyPostsContainer;\n","import React, { useEffect, useState } from 'react';\nimport ui from '../../../../scss/ui.module.scss';\n\n//========================================================================================================================================================\n\nconst UserStatus = (props) => {\n\n    const [editMode, setEditMode] = useState(false);\n    const [status, setStatus] = useState(props.status);\n\n    useEffect(() => {\n        setStatus(props.status);\n    }, [props.status]);\n\n    const activateEditMode = () => {\n        setEditMode(true);\n    }\n\n    const deactivateEditMode = () => {\n        setEditMode(false);\n        props.updateStatus(status);\n    }\n\n    const onStatusChange = (e) => {\n        setStatus(e.currentTarget.value);\n    }\n\n    return (\n        <div className='profile__status'>\n            {!editMode &&\n                <div>\n                    <div onClick={activateEditMode} className={ui.input__div}>\n                        <span>{props.status || 'No status'}</span>\n                    </div>\n                </div>\n            }\n            {editMode &&\n                <div>\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} type=\"text\" value={status} className={ui.input} />\n                </div>\n            }\n        </div>\n    )\n}\n\n//========================================================================================================================================================\n\nexport default UserStatus;\n","import { Formik, Form } from 'formik';\nimport * as yup from 'yup';\nimport { string } from 'yup';\nimport ui from '../../../../../scss/ui.module.scss';\n\n//========================================================================================================================================================\n\nconst ProfileDataForm = (props) => {\n    const validationProfile = yup.object().shape({\n        fullName: yup.string().typeError('string expected!').required('Obligatory field!'),\n        lookingForAJobDescription: yup.string().typeError('string expected!').required('Obligatory field!'),\n        aboutMe: yup.string().typeError('string expected!').required('Obligatory field!'),\n    })\n\n    return (\n        <div className='profile__wpform'>\n            <div className='profile__form'>\n                <Formik\n                    initialValues={{\n                        fullName: '',\n                        lookingForAJob: '',\n                        lookingForAJobDescription: '',\n                        aboutMe: '',\n                        contacts: {\n                            vk: '',\n                            instagram: '',\n                            github: '',\n                        },\n                    }}\n                    validateOnBlur={false}\n                    validateOnChange={false}\n                    onSubmit={(values, { setSubmitting, setStatus }) => {\n                        props.onSubmit(values, setStatus);\n                        setSubmitting(false);\n                    }}\n                    validationSchema={validationProfile}\n                >\n                    {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty, status }) => (\n                        <Form>\n                            <div>\n                                <button\n                                    onClick={handleSubmit}\n                                    type='submit'\n                                    disabled={!isValid && !dirty}\n                                >save</button>\n                            </div>\n                            <div className=\"login__form\">\n                                <p>\n                                    <label htmlFor={`fullName`}>Username</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"text\"\n                                        name='fullName'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.fullName}\n                                        placeholder='field is required'\n                                    />\n                                </p>\n                                {touched.fullName && errors.fullName && <p className={ui.error}>{errors.fullName}</p>}\n                                <p>\n                                    <label htmlFor={`lookingForAJob`}>Looking for a job</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"checkbox\"\n                                        name='lookingForAJob'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.lookingForAJob}\n                                    />\n                                </p>\n                                <p>\n                                    <label htmlFor={`lookingForAJobDescription`}>My professional skills</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"text\"\n                                        name='lookingForAJobDescription'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.lookingForAJobDescription}\n                                        // value={values.lookingForAJobDescription || props.initialValues.lookingForAJobDescription}\n                                        placeholder='field is required'\n                                    />\n                                </p>\n                                {touched.lookingForAJobDescription && errors.lookingForAJobDescription && <p className={ui.error}>{errors.lookingForAJobDescription}</p>}\n                                <p>\n                                    <label htmlFor={`aboutMe`}>About me</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"text\"\n                                        name='aboutMe'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.aboutMe}\n                                        placeholder='field is required'\n                                    />\n                                </p>\n                                {touched.aboutMe && errors.aboutMe && <p className={ui.error}>{errors.aboutMe}</p>}\n                                <div>\n                                    <div>Contacts</div>\n                                    <p>\n                                        <label htmlFor={`contacts.vk`}>vk</label><br />\n                                        <input\n                                            className={ui.input}\n                                            type=\"email\"\n                                            name='contacts.vk'\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.contacts.vk}\n                                        />\n                                    </p>\n                                    <p>\n                                        <label htmlFor={`contacts.instagram`}>instagram</label><br />\n                                        <input\n                                            className={ui.input}\n                                            type=\"email\"\n                                            name='contacts.instagram'\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.contacts.instagram}\n                                        />\n                                    </p>\n                                    <p>\n                                        <label htmlFor={`contacts.github`}>github</label><br />\n                                        <input\n                                            className={ui.input}\n                                            type=\"email\"\n                                            name='contacts.github'\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.contacts.github}\n                                        />\n                                    </p>\n                                </div>\n                                <div className={ui.error}>\n                                    {status}\n                                </div>\n                            </div>\n                        </Form>\n                    )}\n                </Formik>\n            </div>\n        </div>\n    )\n}\n\n//========================================================================================================================================================\n\nexport default ProfileDataForm;\n","\n//========================================================================================================================================================\n\nconst ProfileData = (props) => {\n    return (\n        <>\n            <div className='profile__setedit'>\n                <p>More information</p>\n                <div className='profile__settings'>\n                    <div>\n                        <b>Looking for a job:</b> {props.profile.lookingForAJob ? 'yes' : 'no'}\n                    </div>\n                    <div>\n                        <b>My professional skills:</b> {props.profile.lookingForAJobDescription}\n                    </div>\n                    <div>\n                        <b>About me:</b> {props.profile.aboutMe}\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}\n\n//========================================================================================================================================================\n\nexport default ProfileData;\n","var _path;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgSettings(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    fill: \"#000000\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    viewBox: \"0 0 24 24\",\n    width: \"48px\",\n    height: \"48px\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M 9.6660156 2 L 9.1757812 4.5234375 C 8.3516137 4.8342536 7.5947862 5.2699307 6.9316406 5.8144531 L 4.5078125 4.9785156 L 2.171875 9.0214844 L 4.1132812 10.708984 C 4.0386488 11.16721 4 11.591845 4 12 C 4 12.408768 4.0398071 12.832626 4.1132812 13.291016 L 4.1132812 13.292969 L 2.171875 14.980469 L 4.5078125 19.021484 L 6.9296875 18.1875 C 7.5928951 18.732319 8.3514346 19.165567 9.1757812 19.476562 L 9.6660156 22 L 14.333984 22 L 14.824219 19.476562 C 15.648925 19.165543 16.404903 18.73057 17.068359 18.185547 L 19.492188 19.021484 L 21.826172 14.980469 L 19.886719 13.291016 C 19.961351 12.83279 20 12.408155 20 12 C 20 11.592457 19.96113 11.168374 19.886719 10.710938 L 19.886719 10.708984 L 21.828125 9.0195312 L 19.492188 4.9785156 L 17.070312 5.8125 C 16.407106 5.2676813 15.648565 4.8344327 14.824219 4.5234375 L 14.333984 2 L 9.6660156 2 z M 11.314453 4 L 12.685547 4 L 13.074219 6 L 14.117188 6.3945312 C 14.745852 6.63147 15.310672 6.9567546 15.800781 7.359375 L 16.664062 8.0664062 L 18.585938 7.40625 L 19.271484 8.5917969 L 17.736328 9.9277344 L 17.912109 11.027344 L 17.912109 11.029297 C 17.973258 11.404235 18 11.718768 18 12 C 18 12.281232 17.973259 12.595718 17.912109 12.970703 L 17.734375 14.070312 L 19.269531 15.40625 L 18.583984 16.59375 L 16.664062 15.931641 L 15.798828 16.640625 C 15.308719 17.043245 14.745852 17.36853 14.117188 17.605469 L 14.115234 17.605469 L 13.072266 18 L 12.683594 20 L 11.314453 20 L 10.925781 18 L 9.8828125 17.605469 C 9.2541467 17.36853 8.6893282 17.043245 8.1992188 16.640625 L 7.3359375 15.933594 L 5.4140625 16.59375 L 4.7285156 15.408203 L 6.265625 14.070312 L 6.0878906 12.974609 L 6.0878906 12.972656 C 6.0276183 12.596088 6 12.280673 6 12 C 6 11.718768 6.026742 11.404282 6.0878906 11.029297 L 6.265625 9.9296875 L 4.7285156 8.59375 L 5.4140625 7.40625 L 7.3359375 8.0683594 L 8.1992188 7.359375 C 8.6893282 6.9567546 9.2541467 6.6314701 9.8828125 6.3945312 L 10.925781 6 L 11.314453 4 z M 12 8 C 9.8034768 8 8 9.8034768 8 12 C 8 14.196523 9.8034768 16 12 16 C 14.196523 16 16 14.196523 16 12 C 16 9.8034768 14.196523 8 12 8 z M 12 10 C 13.111477 10 14 10.888523 14 12 C 14 13.111477 13.111477 14 12 14 C 10.888523 14 10 13.111477 10 12 C 10 10.888523 10.888523 10 12 10 z\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgSettings);\nexport default __webpack_public_path__ + \"static/media/settings.af5d533bc5fa9fe2661292d6f6c78d4d.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState } from 'react';\nimport Preloader from '../../../common/Preloader/Preloader';\nimport UserStatus from './UserStatus';\nimport ProfileDataForm from './ProfileData/ProfileDataForm';\nimport ProfileData from './ProfileData/ProfileData';\nimport { Formik } from 'formik';\nimport settings from '../../../../assets/images/settings.svg';\nimport ui from '../../../../scss/ui.module.scss';\n\n//========================================================================================================================================================\n\nlet UserInfo = (props) => {\n    const [isActive, setActive] = useState(false);\n    const [editMode, setEditMode] = useState(false);\n\n    const toggleClass = () => {\n        setActive(!isActive);\n\n    };\n\n    if (!props.profile) {\n        return <Preloader />\n    }\n\n    const onMainPhotoSelected = (e) => {\n        if (e.target.files.length) {\n            props.savePhoto(e.target.files[0]);\n        }\n    }\n\n    const onSubmit = (values, setStatus) => {\n        props.saveProfile(values, setStatus).then(() => {\n            setEditMode(false);\n        })\n    }\n\n    const goToEditMode = () => {\n        setEditMode(true)\n    }\n\n    return (\n        <div className=\"contact-area\">\n            <div className=\"contact\">\n                <main>\n                    <section>\n                        <div className=\"content\">\n                            {props.isOwner &&\n                                <div>\n                                    <label for=\"file-upload\" class=\"custom-file-upload\">\n                                        <p>Change photo</p>\n                                    </label>\n                                    <input id=\"file-upload\" type='file' onChange={onMainPhotoSelected} />\n                                </div>\n                            }\n                            <aside>\n                                <div className='profile__image'>\n                                    <img src={props.profile.photos.large ? props.profile.photos.large : \"https://s3-us-west-2.amazonaws.com/s.cdpn.io/256492/_mLIxaKY_400x400.jpg\"} alt=\"Profile Image\" />\n                                </div>\n                                <div>\n                                    <div className='profile__user'>\n                                        <h1 className='profile__username'>{props.profile.fullName ? props.profile.fullName : 'Riccardo Cavallo'}</h1>\n                                        {props.isOwner &&\n                                            <div>\n                                                <button className='profile__edit' onClick={goToEditMode}>\n                                                    <img src={settings} alt=\"\" />\n                                                </button>\n                                            </div>\n                                        }\n                                    </div>\n                                    <p>\n                                        {props.isOwner\n                                            ? <UserStatus status={props.status} updateStatus={props.updateStatus} />\n                                            :\n                                            <div>\n                                                <div className={ui.input__block}>\n                                                    <span>{props.status || 'No status :C'}</span>\n                                                </div>\n                                            </div>\n                                        }\n                                    </p>\n                                    <div>\n                                        {editMode\n                                            ? <ProfileDataForm initialValues={props.profile} profile={props.profile} onSubmit={onSubmit} />\n                                            : <ProfileData profile={props.profile} isOwner={props.isOwner} />\n                                        }\n                                    </div>\n                                </div>\n                            </aside>\n                            {props.isOwner &&\n                                <span>\n                                    {editMode\n                                        ? null\n                                        : <button onClick={toggleClass} className={isActive ? 'button active' : 'button'}>\n                                            <span>Contact Me</span>\n                                            <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M14.83 30.83L24 21.66l9.17 9.17L36 28 24 16 12 28z\"></path> </g> </svg>\n                                        </button>\n                                    }\n                                </span>\n                            }\n                        </div>\n                        {!editMode && <div className={isActive ? 'title active' : 'title'}><p>Contact Me</p></div>}\n                    </section>\n                </main>\n                {!editMode && <ContactsLinks profile={props.profile} isActive={isActive} />}\n            </div>\n        </div>\n    );\n}\n\nconst ContactsLinks = (props) => {\n    return (\n        <Formik>\n            <nav className={props.isActive ? 'nav active' : 'nav'}>\n                <a href=\"#\" className=\"gmail\">\n                    <div className=\"icon\">\n                        <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\"><path d=\"M16 3v10c0 .567-.433 1-1 1h-1V4.925L8 9.233 2 4.925V14H1c-.567 0-1-.433-1-1V3c0-.283.108-.533.287-.712C.467 2.107.718 2 1 2h.333L8 6.833 14.667 2H15c.283 0 .533.108.713.288.179.179.287.429.287.712z\" fill-rule=\"evenodd\" /></svg>\n                    </div>\n\n                    <div className=\"content\">\n                        <h1>Vk</h1>\n                        <span>{props.profile.contacts.vk}</span>\n                    </div>\n\n                    <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M17.17 32.92l9.17-9.17-9.17-9.17L20 11.75l12 12-12 12z\"></path> </g> </svg>\n                </a>\n\n                <a href=\"#\" className=\"facebook\">\n                    <div className=\"icon\">\n                        <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M15.117 0H.883C.395 0 0 .395 0 .883v14.234c0 .488.395.883.883.883h7.663V9.804H6.46V7.39h2.086V5.607c0-2.066 1.262-3.19 3.106-3.19.883 0 1.642.064 1.863.094v2.16h-1.28c-1 0-1.195.48-1.195 1.18v1.54h2.39l-.31 2.42h-2.08V16h4.077c.488 0 .883-.395.883-.883V.883C16 .395 15.605 0 15.117 0\" fill-rule=\"nonzero\" /></svg>\n                    </div>\n\n                    <div className=\"content\">\n                        <h1>Instagram</h1>\n                        <span>{props.profile.contacts.instagram}</span>\n                    </div>\n\n                    <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M17.17 32.92l9.17-9.17-9.17-9.17L20 11.75l12 12-12 12z\"></path> </g> </svg>\n                </a>\n\n                <a href=\"#\" className=\"twitter\">\n                    <div className=\"icon\">\n                        <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.37-1.337.64-2.085.79-.598-.64-1.45-1.04-2.396-1.04-1.812 0-3.282 1.47-3.282 3.28 0 .26.03.51.085.75-2.728-.13-5.147-1.44-6.766-3.42C.83 2.58.67 3.14.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.41-.02-.61-.058.42 1.304 1.63 2.253 3.07 2.28-1.12.88-2.54 1.404-4.07 1.404-.26 0-.52-.015-.78-.045 1.46.93 3.18 1.474 5.04 1.474 6.04 0 9.34-5 9.34-9.33 0-.14 0-.28-.01-.42.64-.46 1.2-1.04 1.64-1.7z\" fill-rule=\"nonzero\" /></svg>\n                    </div>\n\n                    <div className=\"content\">\n                        <h1>GitHub</h1>\n                        <span>{props.profile.contacts.github}</span>\n                    </div>\n\n                    <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M17.17 32.92l9.17-9.17-9.17-9.17L20 11.75l12 12-12 12z\"></path> </g> </svg>\n                </a>\n\n                <a href=\"#\" className=\"twitter\">\n                    <div className=\"icon\">\n                        <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.37-1.337.64-2.085.79-.598-.64-1.45-1.04-2.396-1.04-1.812 0-3.282 1.47-3.282 3.28 0 .26.03.51.085.75-2.728-.13-5.147-1.44-6.766-3.42C.83 2.58.67 3.14.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.41-.02-.61-.058.42 1.304 1.63 2.253 3.07 2.28-1.12.88-2.54 1.404-4.07 1.404-.26 0-.52-.015-.78-.045 1.46.93 3.18 1.474 5.04 1.474 6.04 0 9.34-5 9.34-9.33 0-.14 0-.28-.01-.42.64-.46 1.2-1.04 1.64-1.7z\" fill-rule=\"nonzero\" /></svg>\n                    </div>\n\n                    <div className=\"content\">\n                        <h1>Telegram</h1>\n                        <span>@dino</span>\n                    </div>\n\n                    <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M17.17 32.92l9.17-9.17-9.17-9.17L20 11.75l12 12-12 12z\"></path> </g> </svg>\n                </a>\n\n                <a href=\"#\" className=\"twitter\">\n                    <div className=\"icon\">\n                        <svg viewBox=\"0 0 16 16\" xmlns=\"http://www.w3.org/2000/svg\" fill-rule=\"evenodd\" clip-rule=\"evenodd\" stroke-linejoin=\"round\" stroke-miterlimit=\"1.414\"><path d=\"M16 3.038c-.59.26-1.22.437-1.885.517.677-.407 1.198-1.05 1.443-1.816-.634.37-1.337.64-2.085.79-.598-.64-1.45-1.04-2.396-1.04-1.812 0-3.282 1.47-3.282 3.28 0 .26.03.51.085.75-2.728-.13-5.147-1.44-6.766-3.42C.83 2.58.67 3.14.67 3.75c0 1.14.58 2.143 1.46 2.732-.538-.017-1.045-.165-1.487-.41v.04c0 1.59 1.13 2.918 2.633 3.22-.276.074-.566.114-.865.114-.21 0-.41-.02-.61-.058.42 1.304 1.63 2.253 3.07 2.28-1.12.88-2.54 1.404-4.07 1.404-.26 0-.52-.015-.78-.045 1.46.93 3.18 1.474 5.04 1.474 6.04 0 9.34-5 9.34-9.33 0-.14 0-.28-.01-.42.64-.46 1.2-1.04 1.64-1.7z\" fill-rule=\"nonzero\" /></svg>\n                    </div>\n\n                    <div className=\"content\">\n                        <h1>Email</h1>\n                        <span>saskeazaske@mail.ru</span>\n                    </div>\n\n                    <svg className=\"arrow\" xmlns=\"http://www.w3.org/2000/svg\" width=\"48\" height=\"48\" viewBox=\"0 0 48 48\"> <g className=\"nc-icon-wrapper\" fill=\"#444444\"> <path d=\"M17.17 32.92l9.17-9.17-9.17-9.17L20 11.75l12 12-12 12z\"></path> </g> </svg>\n                </a>\n            </nav>\n        </Formik>\n    )\n}\n\n//========================================================================================================================================================\n\nexport default UserInfo;\n","import MyPostsContainer from './MyPosts/MyPostsContainer';\nimport './Profile.scss';\nimport UserInfo from './UserInfo/UserInfo';\nimport React from 'react';\n\n//========================================================================================================================================================\n\nlet Profile = (props) => {\n    return (\n        <div className=\"body__profile profile-body\">\n            <UserInfo\n                profile={props.profile}\n                status={props.status}\n                updateStatus={props.updateStatus}\n                isOwner={props.isOwner}\n                savePhoto={props.savePhoto}\n                saveProfile={props.saveProfile}\n            />\n            <MyPostsContainer />\n        </div>\n    );\n}\n\n//========================================================================================================================================================\n\nexport default Profile;\n","import React from 'react';\nimport Profile from './Profile';\nimport { connect } from \"react-redux\"\nimport { getStatus, setUser, setUserProfile, updateStatus, savePhoto, saveProfile } from '../../../Redux/profileReducer';\nimport { useParams } from 'react-router-dom';\nimport { withAuthRedirect } from '../../../hoc/withAuthRedirect';\n\n//========================================================================================================================================================\nclass ProfileContainer extends React.Component {\n\n    profileRefresh() {\n        let userId = this.props.params.userId ? this.props.params.userId : this.props.authorizedUserId; // @mail\n        this.props.setUser(userId);\n        this.props.getStatus(userId);\n    }\n\n    componentDidMount() {\n        this.profileRefresh();\n    }\n\n    componentDidUpdate(prevProps) {\n        if (this.props.params != prevProps.params) {\n            this.profileRefresh();\n        }\n    }\n\n    render() {\n        return <>\n            <Profile {...this.props}\n                profile={this.props.profile}\n                status={this.props.status}\n                updateStatus={this.props.updateStatus}\n                isOwner={!this.props.params.userId}\n                savePhoto={this.props.savePhoto}\n                saveProfile={this.props.saveProfile}\n            />\n        </>\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        profile: state.stateProfilePage.profile,\n        status: state.stateProfilePage.status,\n        authorizedUserId: state.authReducer.userId,\n        isAuth: state.authReducer.isAuth,\n    }\n}\nconst mapDispatchToProps = {\n    setUserProfile,\n    setUser,\n    getStatus,\n    updateStatus,\n    savePhoto,\n    saveProfile,\n}\n\nlet AuthRedirectComponent = withAuthRedirect(ProfileContainer);\n\nconst ProfileURLMatch = (props) => {\n    const params = useParams();\n    return (\n        <AuthRedirectComponent {...props} params={params} />\n    );\n}\n\n//========================================================================================================================================================\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ProfileURLMatch);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\n\n//========================================================================================================================================================\n\nlet mapStateToPropsForRedirect = (state) => {\n    return {\n        isAuth: state.authReducer.isAuth,\n    }\n}\n\nexport const withAuthRedirect = (Component) => {\n    class RedirectComponent extends React.Component {\n        render() {\n            if (!this.props.isAuth) return <Navigate to='/login' />;\n            return <Component {...this.props}/>\n        }\n    }\n\n    return connect(mapStateToPropsForRedirect)(RedirectComponent);\n}\n"],"names":["props","className","message","React","postElements","posts","map","post","id","validationPosts","yup","shape","newPostText","max","typeError","required","initialValues","validateOnBlur","onSubmit","values","addPost","addNewPost","validationSchema","errors","touched","handleBlur","isValid","handleSubmit","handleChange","dirty","setFieldValue","placeholder","ui","type","name","onChange","onBlur","value","disabled","onClick","src","arrow","alt","connect","state","stateProfilePage","postData","dispatch","addPostActionCreator","MyPosts","useState","editMode","setEditMode","status","setStatus","useEffect","e","currentTarget","autoFocus","updateStatus","validationProfile","fullName","lookingForAJobDescription","aboutMe","lookingForAJob","contacts","vk","instagram","github","validateOnChange","setSubmitting","htmlFor","profile","ContactsLinks","isActive","href","viewBox","xmlns","d","width","height","fill","setActive","Preloader","isOwner","for","class","target","files","length","savePhoto","photos","large","settings","saveProfile","then","ProfileContainer","userId","this","params","authorizedUserId","setUser","getStatus","profileRefresh","prevProps","mapDispatchToProps","setUserProfile","AuthRedirectComponent","withAuthRedirect","authReducer","isAuth","useParams","mapStateToPropsForRedirect","Component","RedirectComponent","to"],"sourceRoot":""}