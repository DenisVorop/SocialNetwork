{"version":3,"file":"static/js/243.1d1611c8.chunk.js","mappings":"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","sources":["components/Body/Login/FormLogin.jsx","components/Body/Login/Login.jsx"],"sourcesContent":["import { Form, Formik } from 'formik';\nimport ui from '../../../scss/ui.module.scss';\nimport * as yup from 'yup';\nimport React from 'react';\n\n//========================================================================================================================================================\n\nconst FormLogin = (props) => {\n    const validationLogin = yup.object().shape({\n        login: yup.string().typeError('string expected!').required('Obligatory field!'),\n        password: yup.string().typeError('string expected!').required('Obligatory field!'),\n        confirmPassword: yup.string().oneOf([yup.ref('password')], ('Password mismatch!')).required('Obligatory field!')\n    })\n    console.log(props)\n    return (\n        <>\n            <Formik\n                initialValues={{\n                    login: '',\n                    password: '',\n                    confirmPassword: '',\n                    captcha: '',\n                }}\n                validateOnBlur={false}\n                validateOnChange={false}\n                onSubmit={(values, { setSubmitting, setStatus }) => {\n                    props.getValues(values, setStatus);\n                    setSubmitting(false);\n                }}\n                validationSchema={validationLogin}\n            >\n                {({ values, errors, touched, handleChange, handleBlur, isValid, handleSubmit, dirty, status }) => (\n                    <Form>\n                        <div className='form'>\n                            <div className=\"login__form\">\n                                <p>\n                                    <label htmlFor={`login`}>Login</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"text\"\n                                        name='login'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.login}\n                                    />\n                                </p>\n                                {touched.login && errors.login && <p className='error'>{errors.login}</p>}\n                            </div>\n                            <div className=\"password__form\">\n                                <div className='password'>\n                                    <p>\n                                        <label htmlFor={`password`}>Password</label><br />\n                                        <input\n                                            className={ui.input}\n                                            type=\"password\"\n                                            name='password'\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.password}\n                                        />\n                                    </p>\n                                    {touched.password && errors.password && <p className='error'>{errors.password}</p>}\n                                </div>\n                                <div>\n                                    <p>\n                                        <label htmlFor={`confirmPassword`}>Confirm password</label><br />\n                                        <input\n                                            className={ui.input}\n                                            type=\"password\"\n                                            name='confirmPassword'\n                                            onChange={handleChange}\n                                            onBlur={handleBlur}\n                                            value={values.confirmPassword}\n                                        />\n                                    </p>\n                                    {touched.confirmPassword && errors.confirmPassword && <p className='error'>{errors.confirmPassword}</p>}\n                                </div>\n                            </div>\n                            {props.captchaUrl && <img src={props.captchaUrl} />}\n                            {props.captchaUrl &&\n                                <p>\n                                    <label htmlFor={`captcha`}>Anti-bot symbol</label><br />\n                                    <input\n                                        className={ui.input}\n                                        type=\"captcha\"\n                                        name='captcha'\n                                        onChange={handleChange}\n                                        onBlur={handleBlur}\n                                        value={values.captcha}\n                                    />\n                                </p>\n                            }\n                            <div className={ui.error}>\n                                {status}\n                            </div>\n                            <div className=\"button__form\">\n                                <button\n                                    className={ui._btn}\n                                    disabled={!isValid && !dirty}\n                                    onClick={handleSubmit}\n                                    type='submit'\n                                >Login</button>\n                            </div>\n                        </div>\n                    </Form>\n                )}\n            </Formik>\n        </ >\n    )\n}\n\n//========================================================================================================================================================\n\nexport default FormLogin;\n","import { connect } from 'react-redux';\nimport { Navigate } from 'react-router-dom';\nimport { login } from '../../../Redux/authReducer';\nimport FormLogin from './FormLogin';\nimport './Login.scss';\nimport React from 'react';\n\n//========================================================================================================================================================\n\nconst Login = (props) => {\n    let getValues = (values, setStatus) => {\n        props.login(values.login, values.password, setStatus, values.captcha);\n    }\nconsole.log(props)\n    if (props.isAuth) {\n        return <Navigate to='/profile' />\n    }\n\n    return (\n        <div className=\"body__login login-body\">\n            <div className=\"login-body__form\">\n                <FormLogin getValues={getValues} captchaUrl={props.captchaUrl}/>\n            </div>\n        </div>\n    )\n}\n\nconst MapStateToProps = (state) => ({\n    isAuth: state.authReducer.isAuth,\n    captchaUrl: state.authReducer.captchaUrl,\n})\n\n//========================================================================================================================================================\n\nexport default connect(MapStateToProps, { login })(Login);\n"],"names":["props","validationLogin","yup","shape","login","typeError","required","password","confirmPassword","oneOf","console","log","initialValues","captcha","validateOnBlur","validateOnChange","onSubmit","values","setSubmitting","setStatus","getValues","validationSchema","errors","touched","handleChange","handleBlur","isValid","handleSubmit","dirty","status","className","htmlFor","ui","type","name","onChange","onBlur","value","captchaUrl","src","disabled","onClick","connect","state","isAuth","authReducer","to"],"sourceRoot":""}